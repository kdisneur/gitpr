#! /usr/bin/env bash

set -o errexit
set -o nounset
set -o pipefail

GITPR_EDITOR=${GITPR_EDITOR:-${EDITOR:-vim}};
GITPR_TEMPLATE=${GITPR_TEMPLATE:-};

hasIssueNumer() {
  git rev-parse --abbrev-ref HEAD | grep -qE '^[0-9]+-';
}

getIssueNumber() {
  git rev-parse --abbrev-ref HEAD | sed -E 's/^([0-9]+)-.*/\1/';
}

issue="";
if hasIssueNumer; then
  issue=$(getIssueNumber);
fi

template=$(mktemp /tmp/gitpr.XXXXX);

if [ -z "${GITPR_TEMPLATE}" ]; then
cat <<'EOF' > ${template}
## Description

<DESCRIPTION>

## Related Issue

[ch<ISSUE_NUMBER>]

## Motivation and Context

<CONTEXT>

## How Has This Been Tested?

<TEST>

## Types of changes

- Chore (non-breaking change which refactors / improves the existing code base)
- Bug fix (non-breaking change which fixes an issue)
- New feature (non-breaking change which adds functionality)
- Breaking change (fix or feature that would cause existing functionality to change)

## Checklist:

- ðŸ”´ My code follows the code style of this project.
- ðŸ”´ My change requires a change to the documentation.
- ðŸ”´ I have updated the documentation accordingly.
- ðŸ”´ I have read the **CONTRIBUTING** document.
- ðŸ”´ I have added tests to cover my changes.
- ðŸ”´ All new and existing tests passed.
EOF
else
  cat ${GITPR_TEMPLATE} > ${template};
fi

sed -i'' -e "s/<ISSUE_NUMBER>/${issue}/" ${template}

eval "${GITPR_EDITOR} ${template}";

pbcopy < ${template};

open "https://github.com/$(git remote get-url --push origin | sed -e 's/.*://' -e 's/\\.git//')/compare/$(git rev-parse --abbrev-ref HEAD)?expand=1"
